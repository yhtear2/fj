<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"  
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	      
<mapper namespace="FJ_BOARD"> 

	<select id="getCount" resultType="Integer">  
		select count(*) from fj_board_free  
	</select>  
   
    <!-- 게시판 정보 삽입  -->
	<insert id="insertArticle">   
		Insert into Fj_board_free( 
			board_num,			name,
			email, 				subject, 
			content,			recontent, 
			hstag, 				re_count, 
			scrap_count, 		recom_count, 
			bad_count, 			read_count, 
			re_step, 			category, 
			reg_date 
		)values(
			fj_board_free_seq.NEXTVAL,		#{name, jdbcType=VARCHAR}, 
			#{email, jdbcType=VARCHAR},		#{subject, jdbcType=VARCHAR}, 
			#{content, jdbcType=VARCHAR},	#{recontent, jdbcType=VARCHAR},
			#{hstag, jdbcType=VARCHAR}, 	#{re_count}, 
			#{scrap_count}, 				#{recom_count}, 
			#{bad_count}, 					#{read_count}, 
			#{re_step}, 					#{category, jdbcType=VARCHAR}, 
			#{reg_date}
		)  
	</insert>
	  
	<!-- 게시글 수정부분  -->
	<update id="updateArticle" parameterType="dto.board.BoardDataBean">
		update FJ_BOARD_FREE set category=#{category, jdbcType=VARCHAR}, subject=#{subject, jdbcType=VARCHAR}, hstag=#{hstag, jdbcType=VARCHAR}, content=#{content, jdbcType=VARCHAR}, re_step=#{re_step,jdbcType=INTEGER} where board_num=#{board_num} 
	</update>  
	   
	<!-- 조회 수 증가부분 -->
	<update id="addCount" parameterType="Integer">
		UPDATE 	fj_board_free 
		SET		read_count = read_count + 1 
		WHERE 	board_num = #{board_num} 
	</update>
	
	<!-- 댓글 수 증가부분 -->
	<update id="reCount" parameterType="Map">   
		UPDATE	fj_board_free 
		SET		re_count = re_count+1 
		WHERE	board_num=#{board_num} 
	</update>
	
	<select id="getMaxNum" resultType="Integer">
		select max(board_num) from fj_board_free 
	</select>     
	
	<select id="getArticle" resultType="dto.board.BoardDataBean" parameterType="Integer">
		select * from fj_board_free where board_num=#{board_num}
	</select>
	
	<!--  &gt 는 크기표시 > 의 greate less than, &lg 는 크기표시 < 의 less than -->
	<!-- rownum rn 은 정렬상태의 DB검색 결과중, 일정부분을 가져오게 한다.  --> 
	<!-- order by 컬럼명 asc | desc -->  <!-- asc : 오름차순 / desc : 내림차순 -->
	<!-- 원본(확인 될 때까지 지우지 말 것) -->   
	<select id="getArticles" resultType="dto.board.BoardDataBean" parameterType="Map"> 	 
		SELECT 		board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rn 
		FROM		(select board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rownum rn 
		FROM        fj_board_free 
		ORDER BY    board_num desc) 
		WHERE		rn &gt; = #{start} and rn &lt; = #{end}
		ORDER BY    re_step asc    
	</select>  
	
	<!-- 댓글 수정부분   -->    
	<update id="updateReply" parameterType="dto.board.BoardDataBean">
	 	update fj_board_free set re_step=re_step+1 where board_num= #{board_num} and re_step &gt; #{re_step}
	 </update>   

	 <!-- 삭제부분  -->
	 <delete id="deleteArticle" parameterType="Integer">
	 	delete from fj_board_free where board_num=#{board_num}   
	 </delete>

	      
	<!-- ▼  댓글 쿼리부분  -->
	
	<!-- 댓글 정보 삽입 --> 
	<insert id="commentList">
		INSERT INTO fj_board_free_comment(
			comment_board_num,
			board_num,		email, 
			recontent, 		name, 
			recom_count, 	re_step, 
			reg_date
		) values(
			FJ_BOARD_Comment_seq.NEXTVAL,
			#{board_num}, 						#{email, jdbcType=VARCHAR}, 
			#{recontent, jdbcType=VARCHAR}, 	#{name, jdbcType=VARCHAR},
			#{recom_count}, 					#{re_step}, 
			#{reg_date}
		) 
	</insert>   
	   
	<!-- 댓글 리스트 불러오기  --> 
	<select id="getCommentList" resultType="dto.board.BoardCommentDataBean" parameterType="Map" >
		SELECT 		* 
		FROM		fj_board_free_comment
		WHERE		board_num=#{board_num} 
		ORDER BY	comment_board_num asc
	</select> 
	     
	<select id="getComment" resultType="dto.board.BoardCommentDataBean" parameterType="Integer">
		SELECT 	* 
		FROM 	fj_board_free_comment 
		WHERE	board_num=#{board_num} 
	</select> 
	
	<!-- 댓글 삭제 -->
	<delete id="deleteReply" parameterType="Integer">
		Delete
		FROM	fj_board_free_comment
		WHERE	comment_board_num = #{comment_board_num}   
	</delete>
	
	<update id="reCountMinus" parameterType="Integer">
		UPDATE	fj_board_free
		SET		re_count = re_count - 1 
		WHERE	board_num = #{board_num} 
	</update>

	<!-- 검색  -->  
	<select id="getCategorySearchArticles" parameterType="map" resultType="dto.board.BoardDataBean">
		SELECT 		board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rn 
		FROM		(select board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rownum rn 
		FROM	 	fj_board_free 
		WHERE		category like #{category, jdbcType=VARCHAR}
		ORDER BY	board_num desc)
		WHERE		rn &gt; = #{start} and rn &lt; = #{end}  
		ORDER BY    re_step asc
	</select>
	
	<select id="getTagSearchArticles" parameterType="map" resultType="dto.board.BoardDataBean">
		SELECT 		board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rn 
		FROM		(select board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rownum rn 
		FROM	 	fj_board_free 
		WHERE		hstag like #{tag, jdbcType=VARCHAR}
		ORDER BY	board_num desc)
		WHERE		rn &gt; = #{start} and rn &lt; = #{end}  
		ORDER BY    re_step asc
	</select>
	
	<select id="getSearchSearchArticles" parameterType="map" resultType="dto.board.BoardDataBean">
		SELECT 		board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rn 
		FROM		(select board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rownum rn 
		FROM	 	fj_board_free 
		WHERE		subject like #{search, jdbcType=VARCHAR}
		ORDER BY	board_num desc)
		WHERE		rn &gt; = #{start} and rn &lt; = #{end}  
		ORDER BY    re_step asc
	</select>
	
	<select id="getBoard_numSearchArticles" parameterType="map" resultType="dto.board.BoardDataBean">
		SELECT 		board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rn 
		FROM		(select board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rownum rn 
		FROM	 	fj_board_free 
		ORDER BY	board_num desc)
		WHERE		rn &gt; = #{start} and rn &lt; = #{end}  
		ORDER BY    re_step asc
	</select>
	
	<select id="getRecom_countSearchArticles" parameterType="map" resultType="dto.board.BoardDataBean">
		SELECT 		board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rn 
		FROM		(select board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rownum rn 
		FROM	 	fj_board_free 
		ORDER BY	recom_count desc, board_num desc)
		WHERE		rn &gt; = #{start} and rn &lt; = #{end}  
	</select>
	
	<select id="getRe_countSearchArticles" parameterType="map" resultType="dto.board.BoardDataBean">
		SELECT 		board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rn 
		FROM		(select board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rownum rn 
		FROM	 	fj_board_free 
		ORDER BY	re_count desc, board_num desc)
		WHERE		rn &gt; = #{start} and rn &lt; = #{end}  
	</select>
	
	<select id="getRead_countSearchArticles" parameterType="map" resultType="dto.board.BoardDataBean">
		SELECT 		board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rn 
		FROM		(select board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rownum rn 
		FROM	 	fj_board_free 
		ORDER BY	read_count desc, board_num desc)
		WHERE		rn &gt; = #{start} and rn &lt; = #{end}  
	</select>
	
	<select id="getBestCommunityList" parameterType="map" resultType="dto.board.BoardDataBean">
		SELECT 		board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rn 
		FROM		(select board_num, email, subject, content, hstag, recontent, category, name, re_count, scrap_count, recom_count, bad_count, read_count, re_step,  reg_date, rownum rn 
		FROM	 	fj_board_free 
		WHERE		READ_COUNT  >= 10
		ORDER BY	board_num desc)
		WHERE		rn &gt; = #{start} and rn &lt; = #{end}
	</select>
</mapper>
      





