<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"  
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="FJ_BOARD"> 

	<select id="getCount" resultType="Integer">  
		select count(*) from fj_board_free  
	</select>  

	<insert id="insertArticle">
		insert into fj_board_free( 
			board_num, email, subject, content, recontent, hstag, ref, re_count, scrap_count, recom_count, bad_count, read_count, re_step, category, reg_date) 
			values(
			fj_board_free_seq.NEXTVAL, #{email, jdbcType=VARCHAR}, #{subject, jdbcType=VARCHAR}, #{content, jdbcType=VARCHAR}, #{recontent, jdbcType=VARCHAR},
			#{hstag, jdbcType=VARCHAR}, #{ref}, #{re_count}, #{scrap_count}, #{recom_count}, #{bad_count}, #{read_count}, #{re_step}, #{category, jdbcType=VARCHAR}, #{reg_date})  
	</insert>
	  
	<update id="updateArticle" parameterType="dto.board.BoardDataBean">
		update FJ_BOARD_FREE set category=#{category, jdbcType=VARCHAR}, subject=#{subject, jdbcType=VARCHAR}, hstag=#{hstag, jdbcType=VARCHAR}, content=#{content, jdbcType=VARCHAR} where board_num=#{board_num} 
	</update>  
	   
	<update id="addCount" parameterType="Integer">
		update fj_board_free set read_count=read_count+1 where board_num=#{board_num} 
	</update>
	
	<update id="reCount" parameterType="Integer">  
		update fj_board_free set re_count=re_count+1 where board_num=#{board_num} 
	</update>
	
	<select id="getMaxNum" resultType="Integer">
		select max(board_num) from fj_board_free 
	</select>     
	
	<select id="getArticle" resultType="dto.board.BoardDataBean" parameterType="Integer">
		select * from fj_board_free where board_num=#{board_num}
	</select>
	
	<!--  &gt 는 크기표시 > 의 greate less than, &lg 는 크기표시 < 의 less than -->
	<!-- rownum rn 은 정렬상태의 DB검색 결과중, 일정부분을 가져오게 한다.  --> 
	<!-- order by 컬럼명 asc | desc -->  <!-- asc : 오름차순 / desc : 내림차순 -->
	<select id="getArticles" resultType="dto.board.BoardDataBean" parameterType="Map"> 	 
		select board_num, email, subject, content, recontent, hstag, ref, re_count, scrap_count, recom_count, bad_count, read_count, re_step, category, reg_date,
			rn from (select board_num, email, subject, content, recontent, hstag, ref, re_count, scrap_count, recom_count, bad_count, read_count, re_step, category, reg_date, rownum 
			rn from (select board_num, email, subject, content, recontent, hstag, ref, re_count, scrap_count, recom_count, bad_count, read_count, re_step, category, reg_date from fj_board_free order by board_num desc, re_step asc)
			order by board_num desc, re_step asc) where rn &gt; = #{start} and rn &lt; = #{end}    
	</select>
	    
	<update id="updateReply" parameterType="dto.board.BoardDataBean">
	 	update fj_board_free set re_step=re_step+1 where board_num= #{board_num} and re_step &gt; #{re_step}
	 </update>   

	 <delete id="deleteArticle" parameterType="Integer">
	 	delete from fj_board_free where board_num=#{board_num}   
	 </delete>
	
	<select id="getRecount" parameterType="Integer" resultType="Integer">
		select re_count from Fj_board_free where board_num = #{board_num}
	</select>
	
</mapper>	

   






